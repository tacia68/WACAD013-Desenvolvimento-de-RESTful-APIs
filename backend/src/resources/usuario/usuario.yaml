tags:
  name: Usuario
  description: Endpoints da entidade usuario

paths:
  /usuario:
    get:
      summary: Retorna todos os usuarios cadastrados
      tags: [usuario]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/usuario"
    post:
      summary: Cria um novo usuario
      tags: [usuario]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateusuarioDto"
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/usuario"


  /usuario/{id}:
    get:
      summary: Retorna os dados de um usuario
      tags: [usuario]
      parameters:
        - name: id
          in: path
          description: ID do usuario (UUID)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/usuario"
        "400":
          description: usuario não existe.
          content:
            application/json:
              schema:
                type: object
                example: { msg: "usuario não existe" }

    put:
      summary: Modifica os dados de um dado usuario
      tags: [usuario]
      parameters:
        - name: id
          in: path
          description: ID do usuario (UUID)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateusuarioDto"
        required: true
      responses:
        "200":
          description: usuario atualizado.
          content:
            application/json:
              schema:
                type: object
                example: { msg: "usuario atualizado." }
        "400":
          description: O usuario não existe.
          content:
            application/json:
              schema:
                type: object
                example: { msg: "usuario não existe." }
    delete:
      summary: Apaga um usuario cadastrado.
      tags: [usuario]
      parameters:
        - name: id
          in: path
          description: ID do usuario (UUID)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: usuario removido.
          content:
            application/json:
              schema:
                type: object
                example: { msg: "usuario removido." }
        "400":
          description: O usuario não existe.
          content:
            application/json:
              schema:
                type: object
                example: { msg: "usuario não existe." }
